# "Elite" C64 disassembly / "Elite DX", cc0 2018, see LICENSE.txt
# "Elite" is copyright / trademark David Braben & Ian Bell, All Rights Reserved
# <github.com/Kroc/EliteDX>
#===============================================================================

FEATURES {
    STARTADDRESS:   default = $02a7;
}
SYMBOLS {
    # force the PRG header to be included,
    # even though nothing links against it
    __PRGHEADER__:  type = import;
}
MEMORY {
    # .PRG file header
    PRGHEADER:  file = %O,  start = %S - 2, size = $0002;
    # ensure that the loader code cannot over-run the BASIC vectors
    MAIN:       file = %O,  start = %S,     size = $0300 - %S,  define = yes;
    # place the BASIC vectors at the right place regardless of other code
    VECTORS:    file = %O,  start = $0300,  size = 12;
    # the fallback BASIC bootstrap for when the program is loaded
    # into the BASIC area instead of the intended load address
    BASIC:      file = %O,  start = $0801,  size = $A000 - $0801;

    GMA1:       file = "",  start = $0334,  size = $0800 - $0334;

    LORAM:      file = "",  start = $0700,  size = $4000 - %S;
    HIRAM:      file = "",  start = $6A00,  size = $FFFF - $6A00;
}
SEGMENTS {
    # the .PRG header comes first in the file, obviously.
    # note that "c64-prg.asm" actually populates this segment
    PRGHEADER:  load = PRGHEADER;
    
    BOOTSTRAP:  load = MAIN,    run = BASIC,    define = yes;
    CODE:       load = MAIN,                    define = yes;
    VECTORS:    load = VECTORS,                 define = yes;

    CODE_GMA1:  load = GMA1,                    define = yes;

    DATA_0700:  load = LORAM;
    DATA_FONT:  load = LORAM,   align = $100,   define = yes;
    DATA_0E00:  load = LORAM;
    DATA_1D00:  load = LORAM;
    CODE_GMA5:  load = LORAM;
    CODE_1D00:  load = LORAM;
    JUNK_GMA5:  load = LORAM;

    CODE_6A00:  load = HIRAM;
    DATA_6A00:  load = HIRAM;
}
