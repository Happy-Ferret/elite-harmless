# "Elite" C64 disassembly / "Elite DX", cc0 2018, see LICENSE.txt
# "Elite" is copyright / trademark David Braben & Ian Bell, All Rights Reserved
# <github.com/Kroc/EliteDX>
#===============================================================================

FEATURES {
    STARTADDRESS:   default = $02a7;
}
SYMBOLS {
    # force the PRG header to be included,
    # even though nothing links against it
    __PRGHEADER__:  type = import;
}
MEMORY {
    # the .PRG header consists of the load address of the program;
    # it needs to occupy two bytes in the file, but not advance the address
    PRGHEADER:  file = %O,  start = %S - 2, size = $0002;
    
    STAGE0:     file = %O,  start = %S,     size = $030C - %S,  define = yes;
    # the fallback BASIC bootstrap for when the program is loaded
    # into the BASIC area instead of the intended load address
    BASIC:      file = %O,  start = $0801,  size = $A000 - $0801;

    GMA1:       file = "",  start = $0334,  size = $0800 - $0334;

    LORAM:      file = "",  start = $0700,  size = $4000 - %S;
    HIRAM:      file = "",  start = $6A00,  size = $FFFF - $6A00;
}
SEGMENTS {
    # the .PRG header comes first in the file, obviously.
    # note that "c64-prg.asm" actually populates this segment
    PRGHEADER:      load = PRGHEADER;

    #---------------------------------------------------------------------------

    # the BASIC bootstrap is placed first in case the program is loaded into
    # $0801 instead of the the intended load address $02A7
    BASIC_STAGE0:   load = STAGE0,  run = BASIC,    define = yes;
    # this is the intended code of FIREBIRD.PRG,
    # its only purpose is to load GMA1.PRG and start that
    CODE_STAGE0:    load = STAGE0,                  define = yes;
    # place the BASIC vectors at the right place regardless of other code
    BASIC_VECTORS:  load = STAGE0,  start = $0300,  define = yes;

    #---------------------------------------------------------------------------

    CODE_STAGE1:    load = GMA1,                    define = yes;

    #---------------------------------------------------------------------------

    DATA_0700:      load = LORAM;
    DATA_FONT:      load = LORAM,   align = $100,   define = yes;
    DATA_0E00:      load = LORAM;
    DATA_1D00:      load = LORAM;
    CODE_GMA5:      load = LORAM;
    CODE_1D00:      load = LORAM;
    JUNK_GMA5:      load = LORAM;

    CODE_6A00:      load = HIRAM;
    DATA_6A00:      load = HIRAM;
}
