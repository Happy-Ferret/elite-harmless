# "Elite" C64 disassembly / "Elite DX", cc0 2018, see LICENSE.txt
# "Elite" is copyright / trademark David Braben & Ian Bell, All Rights Reserved
# <github.com/Kroc/EliteDX>
#===============================================================================

FEATURES {
    STARTADDRESS:   default = $4000;
}
SYMBOLS {
    __DATA1__:      type = import;
    __JUNK1__:      type = import;
    __CODE__:       type = import;
    __INIT__:       type = import;

    __DATA2_LOAD__: type = export, value = __INIT_LOAD__;
    __DATA2_SIZE__: type = export, value = __INIT_SIZE__;
}
MEMORY {
    # don't include the first encrypted data block in the 2nd!
    DATA1:      file = "",  start = %S, size = $D000 - %S;
    DATA2:      file = %O,  start = %S, size = $D000 - %S;
}
SEGMENTS {
    # the already-encrypted first data-block
    DATA1:      load = DATA1,   run = DATA2, define = yes;
    # junk padding-data that follows the first block
    JUNK1:      load = DATA1,   run = DATA2, type = ro;
    # decryption routine
    CODE:       load = DATA1,   run = DATA2;
    # the code / data to be encrypted...
    INIT:       load = DATA2,   define = yes;

    # this junk padding-data comes after the 2nd data block
    # *after* encryption, so don't output it now
    JUNK2:      load = DATA1, type = ro;
}
